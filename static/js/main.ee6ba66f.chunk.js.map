{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/FormInput.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","showOnClick","deleteOnClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","key","Header","branding","defaultProps","FormInput","htmlFor","label","classnames","is-invalid","error","placeholder","onChange","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","EditContact","updateContact","match","params","put","About","NotFound","Test","test","console","log","fetch","then","response","json","title","body","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee6ba66f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport default class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  // you can either add proptypes here or underneath the class (see example below)\n  // static propTypes = {\n  //   contact: PropTypes.object.isRequired\n  // };\n\n  state = {\n    showContactInfo: false\n  };\n\n  // no binding necessary because we use arrow function\n  // how does this work, that this function shows the elements?\n  showOnClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  deleteOnClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {\" \"}\n                <span onClick={this.showOnClick}>\n                  {name}{\" \"}\n                  <i\n                    className=\"fas fa-sort-down\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                </span>\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"darkred\"\n                  }}\n                  onClick={this.deleteOnClick.bind(this, id, value.dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-edit\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// alternative way of inserting proptypes\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../Context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2 text-info\">Contact List</h1>\n              {value.contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-info mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// Default value if not specified\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n// Validation\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport default function FormInput(props) {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.label}</label>\n      <input\n        className={classnames(\"form-control\", { \"is-invalid\": props.error })}\n        type={props.type}\n        name={props.name}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {props.error && <div className=\"invalid-feedback\">{props.error}</div>}\n    </div>\n  );\n}\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nFormInput.defaultProps = {\n  type: \"text\"\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport FormInput from \"../layout/FormInput\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required.\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required.\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required.\" } });\n      return;\n    }\n\n    const newContact = {\n      // ES6: same as name: name (if its the same)\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  //onsubmit ends here\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                  <FormInput\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Firstname Lastname\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <FormInput\n                    label=\"E-Mail\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"example@mail.com\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />{\" \"}\n                  <FormInput\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"+49 1111 111 11 11\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <div className=\"text-center\">\n                    <input\n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-secondary\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport FormInput from \"../layout/FormInput\";\nimport axios from \"axios\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    this.setState({\n      name: res.data.name,\n      email: res.data.email,\n      phone: res.data.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required.\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required.\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required.\" } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  //onsubmit ends here\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                  <FormInput\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Firstname Lastname\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <FormInput\n                    label=\"E-Mail\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"example@mail.com\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />{\" \"}\n                  <FormInput\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"+49 1111 111 11 11\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <div className=\"text-center\">\n                    <input\n                      type=\"submit\"\n                      value=\"Edit Contact\"\n                      className=\"btn btn-secondary\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4 text-info\">About</h1>\n      <p className=\"lead\">Simple app to manage contact</p>\n      <p className=\"text-secondary\">\n        Made by Laura Sochaczewski in the Udemy course \"React Front To Back\"\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">Page Not Found</h1>\n      <p className=\"lead\">\n        Sorry, the page you are looking for was not found here.\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    test: \"test\"\n  };\n  componentDidMount() {\n    // here you make usually back end calls, to api or database for example with ajax\n    console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount\");\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log(\"componentDidUpdate\");\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log(\"componentWillUpdate\");\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, nextState) {\n  //     console.log(\"getDerivedStateFromProps\");\n  //     return null;\n  //   }\n\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log(\"getSnapshotBeforeUpdate\");\n  //     return { test: \"something\" };\n  //   }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n        <p>{this.state.title}</p>\n        <p>{this.state.body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport Provider from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container-fluid\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}